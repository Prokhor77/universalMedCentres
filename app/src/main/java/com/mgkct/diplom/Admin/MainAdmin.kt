package com.mgkct.diplom.Admin

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.grid.GridCells
import androidx.compose.foundation.lazy.grid.LazyVerticalGrid
import androidx.compose.foundation.lazy.grid.items
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.AccountCircle
import androidx.compose.material.icons.filled.ExitToApp
import androidx.compose.material.icons.filled.Home
import androidx.compose.material.icons.filled.MoreVert
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.navigation.NavController
import androidx.navigation.compose.rememberNavController
import com.mgkct.diplom.R

class MainAdminActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            MainAdminScreen(rememberNavController())
        }
    }
}

@Composable
fun MainAdminScreen(navController: NavController) {
    val medicalCenter = "–õ–û–î–≠"
    val totalAppointments = 35
    val totalDoctors = 134
    val doctorsOnShift = 78
    val sickDoctors = 6

    val registeredPatients = 120
    val avgWaitingTime = "15 –º–∏–Ω—É—Ç"

    val dailyIncome = "2500 BYN"
    val paidServices = 48

    val newRequests = 5
    val complaints = 2

    var expandedMenu by remember { mutableStateOf(false) }

    val data = listOf(
        "–ü—Ä–∏–µ–º–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: $totalAppointments",
        "–û–±—â–µ–µ –∫–æ–ª-–≤–æ –≤—Ä–∞—á–µ–π: $totalDoctors",
        "–í—Ä–∞—á–µ–π –Ω–∞ —Å–º–µ–Ω–µ: $doctorsOnShift",
        "–í—Ä–∞—á–µ–π –Ω–∞ –±–æ–ª—å–Ω–∏—á–Ω–æ–º: $sickDoctors"
    )

    Box(modifier = Modifier.fillMaxSize()) {
        Image(
            painter = painterResource(id = R.drawable.background_image),
            contentDescription = "–§–æ–Ω",
            modifier = Modifier.fillMaxSize(),
            contentScale = ContentScale.Crop
        )

        Scaffold(
            topBar = {
                @OptIn(ExperimentalMaterial3Api::class)
                TopAppBar(
                    title = {
                        Row(
                            verticalAlignment = Alignment.CenterVertically
                        ) {
                            Image(
                                painter = painterResource(id = R.mipmap.medical),
                                contentDescription = "–ò–∫–æ–Ω–∫–∞",
                                modifier = Modifier.size(30.dp)
                            )
                            Spacer(modifier = Modifier.width(8.dp))
                            Text("–ò–≤–∞–Ω–æ–≤ –°–µ—Ä–≥–µ–π –í–∞—Å–∏–ª—å–µ–≤–∏—á")
                        }
                    },
                    actions = {
                        IconButton(onClick = { expandedMenu = true }) {
                            Icon(Icons.Default.MoreVert, contentDescription = "–ú–µ–Ω—é")
                        }
                        DropdownMenu(
                            expanded = expandedMenu,
                            onDismissRequest = { expandedMenu = false }
                        ) {
                            DropdownMenuItem(
                                text = { Text("–ì–ª–∞–≤–Ω–∞—è") },
                                onClick = { navController.navigate("main_admin") },
                                leadingIcon = {
                                    Icon(Icons.Default.Home, contentDescription = "–ì–ª–∞–≤–Ω–∞—è")
                                }
                            )
                            DropdownMenuItem(
                                text = { Text("–î–æ–±–∞–≤–∏—Ç—å –≤—Ä–∞—á–∞") },
                                onClick = { navController.navigate("add_doctor") },
                                leadingIcon = {
                                    Icon(Icons.Default.AccountCircle, contentDescription = "–î–æ–±–∞–≤–∏—Ç—å –≤—Ä–∞—á–∞")
                                }
                            )
                            DropdownMenuItem(
                                text = { Text("–í—ã–π—Ç–∏") },
                                onClick = { navController.navigate("login_screen") },
                                leadingIcon = {
                                    Icon(Icons.Default.ExitToApp, contentDescription = "–í—ã—Ö–æ–¥")
                                }
                            )
                        }
                    }
                )
            },
            containerColor = Color.Transparent
        ) { paddingValues ->
            Column(
                modifier = Modifier
                    .fillMaxSize()
                    .padding(paddingValues)
                    .padding(horizontal = 14.dp),
                horizontalAlignment = Alignment.CenterHorizontally
            ) {
                Spacer(modifier = Modifier.height(14.dp))

                Text(
                    text = medicalCenter,
                    style = MaterialTheme.typography.headlineMedium.copy(fontWeight = FontWeight.Bold)
                )

                Spacer(modifier = Modifier.height(1.dp))

                LazyVerticalGrid(
                    columns = GridCells.Fixed(2),
                    modifier = Modifier.fillMaxWidth(),
                    contentPadding = PaddingValues(8.dp)
                ) {
                    items(data) { text ->
                        InfoCard(text)
                    }
                }

                Spacer(modifier = Modifier.height(12.dp))

                // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
                InfoSection(
                    title = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤",
                    items = listOf(
                        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: $registeredPatients",
                        "–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è: $avgWaitingTime"
                    )
                )

                Spacer(modifier = Modifier.height(12.dp))

                // –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                InfoSection(
                    title = "üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                    items = listOf(
                        "–î–æ—Ö–æ–¥ –∑–∞ –¥–µ–Ω—å: $dailyIncome",
                        "–û–ø–ª–∞—á–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏: $paidServices"
                    )
                )

                Spacer(modifier = Modifier.height(12.dp))

                // –ó–∞—è–≤–∫–∏ –∏ –∂–∞–ª–æ–±—ã
                InfoSection(
                    title = "üì© –ó–∞—è–≤–∫–∏ –∏ –∂–∞–ª–æ–±—ã",
                    items = listOf(
                        "–ù–æ–≤—ã–µ –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ: $newRequests",
                        "–ñ–∞–ª–æ–±—ã –æ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é: $complaints"
                    )
                )
            }
        }
    }
}

@Composable
fun InfoSection(title: String, items: List<String>) {
    Column(
        modifier = Modifier
            .fillMaxWidth()
            .padding(horizontal = 8.dp),
        horizontalAlignment = Alignment.Start
    ) {
        Text(
            text = title,
            style = MaterialTheme.typography.titleLarge.copy(fontWeight = FontWeight.Bold)
        )
        Spacer(modifier = Modifier.height(6.dp))
        items.forEach { item ->
            Text(
                text = item,
                style = MaterialTheme.typography.bodyLarge.copy(fontSize = 18.sp) // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
            )
            Spacer(modifier = Modifier.height(4.dp))
        }
    }
}

@Composable
fun InfoCard(text: String) {
    Card(
        colors = CardDefaults.cardColors(containerColor = Color.White),
        elevation = CardDefaults.cardElevation(defaultElevation = 6.dp),
        modifier = Modifier
            .padding(8.dp)
            .fillMaxWidth()
            .aspectRatio(1.5f)
    ) {
        Box(
            modifier = Modifier
                .fillMaxSize()
                .padding(16.dp),
            contentAlignment = Alignment.Center
        ) {
            Text(
                text = text,
                style = MaterialTheme.typography.bodyLarge.copy(fontSize = 18.sp) // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
            )
        }
    }
}

@Preview(showBackground = true)
@Composable
fun PreviewMainAdminScreen() {
    MainAdminScreen(navController = rememberNavController())
}
